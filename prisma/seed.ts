import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function seed() {
  // Clean up the tables
  await prisma.collection.deleteMany({});
  await prisma.article.deleteMany({});

  // Create the records
  // Unforunately, createMany is not supported for SQLite :(
  const { id: introductionId } = await prisma.collection.create({
    data: {
      name: "O que Ã© a Coders Club?",
    },
  });

  const { id: platformId } = await prisma.collection.create({
    data: {
      name: "A plataforma da Coders Club",
    },
  });

  const { id: paymentId } = await prisma.collection.create({
    data: {
      name: "Pagamentos",
    },
  });

  await prisma.article.create({
    data: {
      title: "O que Ã© a comunidade Coders Club?",
      content: `A Coders Club Ã© uma comunidade de devs que buscam sair da estagnaÃ§Ã£o e crescerem em suas carreiras.`,
      collectionId: introductionId,
    },
  });

  await prisma.article.create({
    data: {
      title: "O que a comunidade ensina?",
      content: `A comunidade tem aulas e cursos focados em assuntos que vocÃª precisarÃ¡ dominar para crescer na sua carreira como dev. Temos conteÃºdos sobre portfÃ³lio, crescimento na carreira, como conseguir as melhores oportunidades, alÃ©m de conteÃºdos tÃ©cnicos sobre Javascript, Typescript e React.`,
      collectionId: introductionId,
    },
  });

  await prisma.article.create({
    data: {
      title: "Ainda nÃ£o trabalho como desenvolvedor, a comunidade Ã© para mim?",
      content: `Com certeza. A comunidade te proporcionarÃ¡ o conteÃºdo e o contato com pessoas que buscam o mesmo objetivo que vocÃª.`,
      collectionId: introductionId,
    },
  });

  await prisma.article.create({
    data: {
      title: `Vou ter conteÃºdos sobre como me posicionar e crescer na carreira?`,
      content: `Sim, esse Ã© um dos grandes focos da comunidade, nÃ£o sÃ³ ensinar a parte tÃ©cnica, mas ensinar tambÃ©m como vocÃª pode usar esses conhecimentos para crescer na sua carreira de uma vez por todas.`,
      collectionId: introductionId,
    },
  });

  await prisma.article.create({
    data: {
      title: `Como vÃ£o funcionar as aulas?`,
      content: `Toda semana nÃ³s teremos uma nova aula ao vivo, que sÃ£o divulgadas no nosso grupo privado. Na plataforma de membros vocÃª terÃ¡ acesso a gravaÃ§Ã£o das mais de 32 aulas, alÃ©m de outros conteÃºdos exclusivos.`,
      collectionId: platformId,
    },
  });

  await prisma.article.create({
    data: {
      title: `Como vou receber o acesso ao produto?`,
      content: `Em nosso portal, temos um mÃ³dulo chamado Comece Aqui. LÃ¡ eu apresento toda a comunidade e mostro como vocÃª pode ter acesso ao nosso grupo privado.`,
      collectionId: platformId,
    },
  });

  await prisma.article.create({
    data: {
      title: "Como funciona a garantia e reembolso?",
      content: `VocÃª tem atÃ© 7 dias para pedir o reembolso e serÃ¡ devolvido 100% do seu investimento.`,
      collectionId: paymentId,
    },
  });

  console.log(`Database has been seeded. ðŸŒ±`);
}

seed()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
